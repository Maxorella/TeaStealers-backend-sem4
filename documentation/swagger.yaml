schemes:
  - http
  - https
swagger: '2.0'
info:
  description: This is an Ouzi server.
  title: Ouzi Project API
  contact: {}
  version: '1.0'
host: localhost:8080
basePath: /api
paths:
  /word/page/{page}:
    get:
      description: Get Word Text.
      produces:
        - application/json
      tags:
        - word
      summary: Get page of words text
      parameters:
        - name: page
          in: path
          required: true
          type: integer
          format: int32
          minimum: 1
          description: Page number (starting from 1)
        - name: page_size
          in: query
          required: false
          type: integer
          format: int32
          minimum: 10
          maximum: 100
          default: 30
          description: Number of items per page
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/models.WordPage'
          examples:
            application/json:
        '400':
          description: Bad request
          schema:
            type: string
          examples:
            application/json: "Page number must be positive integer"
        '404':
          description: Page not found
          schema:
            type: string
          examples:
            application/json: "Requested page not found"
        '500':
          description: Internal server error
          schema:
            type: string
          examples:
            application/json: "Internal server error"



  /word/{word}:
    get:
      description: Get Word Transcription, Audi
      produces:
        - application/json
      tags:
        - word
      summary: Get Word Transcription and Audio
      parameters:
        - name: word
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/models.WordInfo'
          examples:
            application/json:
              word: "hello"
              transcription: "həˈləʊ"
        '400':
          description: Incorrect word format
          schema:
            type: string
            example: "Invalid word format"
        '500':
          description: Internal server error
          schema:
            type: string
            example: "Internal server error occurred"

  /word/create_word:
    post:
      description: Create new word entry with text and transcription without audio.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - dataset
      summary: Create word
      parameters:
        - in: body
          name: body
          description: Word data
          required: true
          schema:
            $ref: '#/definitions/models.WordInfo'
      responses:
        '201':
          description: Created
          schema:
            type: string
          examples:
            application/json:
              "Word created"
        '400':
          description: Incorrect word format
          schema:
            type: string
            example: "Invalid word format"
        '401':
          description: Unauthorized
          schema:
            type: string
          examples:
            application/json:
              "Authentication required"
        '403':
          description: Forbidden
          schema:
            type: string
          examples:
            application/json:
              "No permission"
        '409':
          description: Conflict
          schema:
            type: string
          examples:
            application/json:
              "Word already exists"
        '500':
          description: Internal server error
          schema:
            type: string
            example: "Internal server error occurred"



  /audio/translate_audio:
    post:
      description: Get text transcription from audio file
      consumes:
        - multipart/form-data
      produces:
        - application/json
      tags:
        - audio
      summary: Transcribe audio to text
      parameters:
        - name: file
          in: formData
          type: file
          description: Audio file to transcribe (max 5mb wav, mp3)
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/models.GotWord'
          examples:
            application/json:
              transcription: "həˈləʊ"
        '400':
          description: Incorrect data format
          schema:
            type: string
          examples:
            application/json: "Invalid audio format"
        '413':
          description: Payload too large
          schema:
            type: string
          examples:
            application/json: "File exceeds size limit"
        '415':
          description: Unsupported media type
          schema:
            type: string
          examples:
            application/json: "Unsupported media type"
        '422':
          description: Unprocessable content
          schema:
            type: string
          examples:
            application/json: "No recognizable speech in audio"
        '500':
          description: Internal server error
          schema:
            type: string
          examples:
            application/json: "Internal server error occurred"




  /word/pronunciation/{word}:
    post:
      description: download audio of word
      produces:
        - application/json
      tags:
        - dataset
      summary: Post pronunciation of a word to s3
      parameters:
        - name: word
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/models.WordInfo'
        '400':
          description: Incorrect data format
          schema:
            type: string
        '500':
          description: Internal server error
          schema:
            type: string
    get:
      description: Get pronunciation of audio
      produces:
        - application/json
      tags:
        - audio
      summary: Get pronunciation of a word
      parameters:
        - name: word
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/models.WordInfo'
        '400':
          description: Incorrect data format
          schema:
            type: string
        '500':
          description: Internal server error
          schema:
            type: string



  /stat/{word}:
    post:
      description: Record statistics about word practice attempt
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - stat
      summary: Record word practice statistics
      parameters:
        - name: word
          in: path
          required: true
          type: string
          minLength: 2
          maxLength: 50
          description: Practiced word (letters and hyphens only, 2-50 chars)
        - in: body
          name: stats
          required: true
          description: Practice statistics data
          schema:
            $ref: '#/definitions/models.WordPracticeStats'
      responses:
        '200':
          description: Statistics successfully recorded
          schema:
            type: object
            properties:
              success:
                type: boolean
              recorded_at:
                type: string
                format: date-time
          examples:
            application/json:
              success: true
              recorded_at: "2023-11-15T14:30:45Z"
        '400':
          description: Invalid input data
          schema:
            type: string
          examples:
            application/json:
              "Invalid statistics data"
        '404':
          description: Word not found
          schema:
            type: string
          examples:
            application/json:
              "Word not found in dictionary"
        '500':
          description: Internal server error
          schema:
            type: string
          examples:
            application/json:
              "Failed to save statistics"

    get:
      description: Get practice statistics for specific word
      produces:
        - application/json
      tags:
        - stat
      summary: Get word practice statistics
      parameters:
        - name: word
          in: path
          required: true
          type: string
          description: Word to get stats for (letters and hyphens only, 2-50 chars)
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/models.WordStatsResponse'
          examples:
            application/json:
              word: "hello"
              total_attempts: 42
              correct_attempts: 35
              accuracy: 0.83
              last_practiced: "2023-11-15T14:30:45Z"
              attempts:
                - date: "2023-11-15"
                  correct: true
                - date: "2023-11-14"
                  correct: false
        '404':
          description: Word not found or no statistics available
          schema:
            type: string
          examples:
            application/json:
              "No statistics available for this word"
        '500':
          description: Internal server error
          schema:
            type: string
          examples:
            application/json:
              "Internal server error"

definitions:
  models.WordInfo:
    type: object
    properties:
      word:
        description: Word contains info about word.
        type: string
        example: "hello"
      transcription:
        description: Transcription of given word.
        type: string
        example: "həˈləʊ"
    example:
      word: "hello"
      transcription: "həˈləʊ"
  models.WordPage:
    type: array
    items:
      type: object
      properties:
        word1:
          type: string
          description: First word in page
          example: "hello"
        word2:
          type: string
          description: Second word in page
          example: "world"
        word3:
          type: string
          description: Third word in page
          example: "swagger"
      additionalProperties: false
    example:
      - word1: "apple"
        word2: "banana"
        word3: "cherry"

  models.GotWord:
    type: object
    properties:
      transcription:
        description: Got translation from ML service.






  models.WordPracticeStats:
    type: object
    properties:
      correct:
        type: boolean
        description: Whether the attempt was successful
      duration_sec:
        type: number
        format: float
        minimum: 0.1
        maximum: 60.0
        description: Time spent on attempt in seconds
      mode:
        type: string
        enum: ["listening", "speaking", "writing"]
        description: Practice mode
    required:
      - correct
      - duration_sec

  models.WordStatsResponse:
    type: object
    properties:
      word:
        type: string
        description: The word being queried
      total_attempts:
        type: integer
        description: Total number of practice attempts
      correct_attempts:
        type: integer
        description: Number of correct attempts
      accuracy:
        type: number
        format: float
        minimum: 0
        maximum: 1
        description: Correct attempts ratio (0-1)
      last_practiced:
        type: string
        format: date-time
        description: Last practice timestamp
      attempts:
        type: array
        items:
          $ref: '#/definitions/models.PracticeAttempt'

  models.PracticeAttempt:
    type: object
    properties:
      date:
        type: string
        format: date
      correct:
        type: boolean
      duration_sec:
        type: number
        format: float


